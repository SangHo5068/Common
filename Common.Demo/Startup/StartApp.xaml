<baseview:BaseWindow x:Class="Common.Demo.StartApp"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:basectrl="clr-namespace:Common.Controls;assembly=Common"
                     xmlns:baseview="clr-namespace:Common.Views;assembly=Common"
                     xmlns:noti="clr-namespace:Common.Notify;assembly=Common"
                     xmlns:local="clr-namespace:Common.Demo"
                     mc:Ignorable="d"
                     Style="{DynamicResource StartAppWindowStyle}"
                     WindowStartupLocation="CenterScreen"
                     ShowInTaskbar="True"
                     Height="400" Width="400"
                     d:DataContext="{d:DesignInstance local:StartAppViewModel}"
                     noti:LoadedBindings.LoadedEnabled="True"
                     noti:LoadedBindings.LoadedAction="{Binding LoadAction}">
    <Window.Resources>
        <Style TargetType="Border" x:Key="InputBorderStyle">
            <Setter Property="BorderBrush" Value="{DynamicResource Brush_Common}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Width" Value="220"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="Margin" Value="10,2"/>
        </Style>
        <Style TargetType="TextBox" BasedOn="{StaticResource BaseTextBoxStyle}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource Brush.Black}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{DynamicResource AppFont}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True"/>
            </Style.Triggers>
        </Style>
        <Style TargetType="TextBlock" x:Key="TextBlockStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource Brush.Black}"/>
            <Setter Property="FontFamily" Value="{DynamicResource AppFont}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Margin" Value="10,0,5,0"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="TextBlockVersionStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource Brush.Black}"/>
            <Setter Property="FontFamily" Value="{DynamicResource AppFont}"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,0,20"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="TextBlockCopyrightStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource Background_CommonButton}"/>
            <Setter Property="FontFamily" Value="{DynamicResource AppFont}"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,0,20"/>
        </Style>
        <Style TargetType="PasswordBox" BasedOn="{StaticResource BasePassWord}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource Brush.Black}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontFamily" Value="{DynamicResource AppFont}"/>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource Brush.Black}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontFamily" Value="{DynamicResource AppFont}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="10,0,5,0"/>
        </Style>


        <DataTemplate x:Key="LocalTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="40" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="2" Style="{DynamicResource TextBlockStyle}"
                           VerticalAlignment="Center" HorizontalAlignment="Center"
                           Foreground="{DynamicResource Brush_PopupButtonCommon}"
                           Text="{Binding Path=StartingMessage, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
        </DataTemplate>
    </Window.Resources>
    <Window.DataContext>
        <local:StartAppViewModel />
    </Window.DataContext>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="MouseLeftButtonDown">
            <i:InvokeCommandAction Command="{Binding CommandMouseMove}" PassEventArgsToCommand="True"
                                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>


    <Window.Template>
        <ControlTemplate TargetType="Window">
            <Border Background="{TemplateBinding Background}" CornerRadius="5">
                <Grid Margin="7">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>


                    <basectrl:WindowCloseButton Margin="0,-2,5,0" HorizontalAlignment="Right" VerticalAlignment="Top" IsTabStop="False" Focusable="False"
                                                Command="{Binding CommandWindowClose, RelativeSource={RelativeSource AncestorType=baseview:BaseWindow}}"/>

                    <!--Login-->
                    <Border Grid.Row="1" Background="Transparent" Opacity="0.8" CornerRadius="0,0,5,5" d:IsHidden="False"
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Grid Margin="10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="240" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="20"/>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="1" Grid.Column="1" Margin="0">
                                <Image Width="205" Height="120" Stretch="Fill" Source="pack://application:,,,/mobiCARE_Cardio_Server;component/Resources/images/mobiCARE_Cardio_Logo_Puple2.png" />
                            </Grid>

                            <!--Login Template-->
                            <ContentPresenter Grid.Column="1" Grid.Row="2" x:Name="LoginTemplate" Content="{Binding}" ContentTemplate="{StaticResource LocalTemplate}"/>

                            <TextBlock Grid.Row="3" Grid.ColumnSpan="3" Style="{DynamicResource TextBlockVersionStyle}"
                                       Text="{Binding ProductVersion, StringFormat={}Version {0}, UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock Grid.Row="4" Grid.ColumnSpan="3" Style="{DynamicResource TextBlockCopyrightStyle}"
                                       Text="{Binding Path=Copyright, StringFormat={}Copyright © 2019 {0} Technology. All RIGHT RESERVED}"/>

                            <basectrl:WaitingBar Grid.RowSpan="5" Grid.ColumnSpan="3" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0.8" d:IsHidden="True" Panel.ZIndex="10"
                                         Visibility="{Binding IsWaiting, Converter={StaticResource BooleanToVisibilityInvertConverter}, UpdateSourceTrigger=PropertyChanged}"
                                         EasingColorStart="{DynamicResource Brush.Black}" EasingColorEnd="{DynamicResource Brush.Black}"
                                         Background="{DynamicResource Brush.White}"
                                         Message="{Binding Header, UpdateSourceTrigger=PropertyChanged}"
                                         SubMessage="{Binding StartingMessage, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </Border>
                </Grid>
            </Border>
        </ControlTemplate>
    </Window.Template>
</baseview:BaseWindow>
