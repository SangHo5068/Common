<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:converter="clr-namespace:Common.Converters"
                    xmlns:local="clr-namespace:Common.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Common;component/Resources/Styles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="GrayBackGround" Color="#FF333333"/>
    <SolidColorBrush x:Key="SelectedTextColor" Color="Black"/>
    <SolidColorBrush x:Key="SelectedBackgroundColor" Color="#FFFFAF00"/>
    <SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4"/>

    <LinearGradientBrush x:Key="VerticalScrollBarBackground" EndPoint="1,0" StartPoint="0,0">
        <GradientStop Color="#E1E1E1" Offset="0"/>
        <GradientStop Color="#EDEDED" Offset="0.20"/>
        <GradientStop Color="#EDEDED" Offset="0.80"/>
        <GradientStop Color="#E3E3E3" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalScrollBarBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#E1E1E1" Offset="0"/>
        <GradientStop Color="#EDEDED" Offset="0.20"/>
        <GradientStop Color="#EDEDED" Offset="0.80"/>
        <GradientStop Color="#E3E3E3" Offset="1"/>
    </LinearGradientBrush>

    <converter:CheckedTypeToNullableBooleanConvereter x:Key="CheckedTypeToNullableBooleanConvereter"/>
    <converter:DoubleToStringConverterWithNaNNull     x:Key="DoubleToStringConverterWithNaNNull"/>
    <converter:TypeToBooleanConverter                 x:Key="TypeToBooleanConverter"/>
    <converter:TreeViewTypeToCheckBoxVisibleConverter x:Key="TreeViewTypeToCheckBoxVisibleConverter"/>


    <HierarchicalDataTemplate ItemsSource="{Binding Children}" x:Key="MapResourceHierarchicalDataTemplate">
        <Grid ClipToBounds="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel x:Name="stackPanel" Orientation="Horizontal" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="5,0,0,0" ClipToBounds="True">
                <CheckBox x:Name="checker" VerticalAlignment="Center"
						  IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource CheckedTypeToNullableBooleanConvereter}}"
						  Visibility="{Binding TreeViewType, Converter={StaticResource TreeViewTypeToCheckBoxVisibleConverter}}"/>
                <Image x:Name="image" Visibility="Collapsed" Width="12" Height="12" Stretch="Fill" Margin="5,0,3,0"/>
                <TextBlock x:Name="textblock" Margin="3,0,5,0" Foreground="LightGray" VerticalAlignment="Center" HorizontalAlignment="Stretch"
						   Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"
						   ToolTip="{Binding Text, RelativeSource={RelativeSource Mode=Self}}"
						   TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" ClipToBounds="True" Width="130"
						   FontFamily="{Binding FontFamily, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"
						   FontSize="{Binding FontSize, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"
						   FontStretch="{Binding FontStretch, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"
						   FontWeight="{Binding FontWeight, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"/>
            </StackPanel>
            <TextBlock x:Name="xChildrenCountTextBlock" Grid.Column="1" Margin="5,0,2,0" VerticalAlignment="Center" HorizontalAlignment="Right" TextAlignment="Right" Foreground="LightGray"
					   FontFamily="{Binding FontFamily, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"
					   FontSize="{Binding FontSize, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"
					   FontStretch="{Binding FontStretch, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"
					   FontWeight="{Binding FontWeight, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"/>
        </Grid>
        <HierarchicalDataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.TreeViewType, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="GisElementList"/>
                    <Condition Binding="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}" Value="Visible"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="xChildrenCountTextBlock" Property="TextBlock.Text" Value="{Binding ChildrenCount, UpdateSourceTrigger=PropertyChanged, StringFormat={}({0})}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.IsVisible, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="False"/>
                    <Condition Binding="{Binding DataContext.HasChildren, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="stackPanel" Property="Margin" Value="25,0,0,0"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.TreeViewType, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="GisElementList"/>
                    <Condition Binding="{Binding DataContext.ChildrenCount, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="0"/>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True"/>
                    <Condition Binding="{Binding DataContext.IsVisible, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="textblock" Property="Foreground" Value="{DynamicResource SelectedTextColor}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TreeViewType}" Value="GisFilter"/>
                    <Condition Binding="{Binding DataContext.HasChildren, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="False"/>
                    <Condition Binding="{Binding ImageString, Converter={StaticResource NullToBooleanConverter}}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="image" Property="Source" Value="{Binding ImageString, Converter={StaticResource StringToImageConverter}}"/>
                    <Setter TargetName="image" Property="Visibility" Value="Visible"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.TreeViewType, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="GisElementList"/>
                    <Condition Binding="{Binding _IW_GE_LNG, Converter={StaticResource DoubleToStringConverterWithNaNNull}}" Value="{x:Null}"/>
                    <Condition Binding="{Binding _IW_GE_LAT, Converter={StaticResource DoubleToStringConverterWithNaNNull}}" Value="{x:Null}"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="textblock" Property="ToolTipService.ToolTip" Value="{x:Null}"/>
            </MultiDataTrigger>
        </HierarchicalDataTemplate.Triggers>
    </HierarchicalDataTemplate>

    <Style x:Key="GisSideTreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle SnapsToDevicePixels="true" Margin="3" Stroke="White" StrokeDashArray="1 2" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ToggleButton}" x:Key="sGisSideExpandCollapseToggleStyle">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Margin" Value="1,0"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="Height" Value="13"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Margin="0" Background="#00000000">
                        <Grid x:Name="canvas" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Width="Auto" Height="Auto" Visibility="Visible">
                            <Border x:Name="border" BorderBrush="DimGray" BorderThickness="1" SnapsToDevicePixels="True"/>
                            <Rectangle x:Name="rectangle1" Fill="DimGray" HorizontalAlignment="Center" Margin="0" Stroke="{x:Null}" StrokeLineJoin="Round" Width="1" Height="5" VerticalAlignment="Center" SnapsToDevicePixels="True"/>
                            <Rectangle x:Name="rectangle" Fill="DimGray" HorizontalAlignment="Center" Margin="0" Stroke="{x:Null}" StrokeLineJoin="Round" Width="5" Height="1" VerticalAlignment="Center" SnapsToDevicePixels="True"/>
                        </Grid>
                        <Grid x:Name="canvas_Checked" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
								  Margin="0" Width="Auto" Height="Auto" 
								  Visibility="Collapsed">
                            <Border x:Name="border1" BorderBrush="DimGray" BorderThickness="1" SnapsToDevicePixels="True"/>
                            <Rectangle x:Name="rectangle2" Fill="DimGray" HorizontalAlignment="Center" Margin="0" Stroke="{x:Null}" StrokeLineJoin="Round" Width="5" Height="1" VerticalAlignment="Center" SnapsToDevicePixels="True"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FFA8A8A8"/>
                            <Setter Property="Fill" TargetName="rectangle1" Value="#FFA8A8A8"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFA8A8A8"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="canvas_Checked" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="canvas" Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="canvas" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="canvas_Checked" Value="Visible"/>
                            <Setter Property="BorderBrush" TargetName="border1" Value="#FFA8A8A8"/>
                            <Setter Property="Fill" TargetName="rectangle2" Value="#FFA8A8A8"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:FocusTreeViewItem}" x:Key="sGisSideTreeViewItemStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource GisSideTreeViewItemFocusVisual}"/>
        <Setter Property="Padding" Value="1,0,0,0"/>
        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FocusTreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="19"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="Bd" Grid.Column="0" Grid.ColumnSpan="2" Background="{DynamicResource GrayBackGround}"
								HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        <DockPanel Grid.Column="0" Grid.ColumnSpan="2" x:Name="xContentPanel" Margin="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" LastChildFill="True">
                            <ToggleButton x:Name="Expander" ClickMode="Press" DockPanel.Dock="Left"
									  IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
									  Style="{StaticResource sGisSideExpandCollapseToggleStyle}"/>
                            <ContentControl DockPanel.Dock="Right" x:Name="contentControl" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                                <ContentControl.InputBindings>
                                    <MouseBinding Gesture="LeftDoubleClick" Command="{Binding ClickCommand}" CommandParameter="{Binding}"/>
                                </ContentControl.InputBindings>
                            </ContentControl>

                            <!--<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding DataContext.TreeViewType, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="GisElementList"/>
									<Condition Binding="{Binding DataContext.HasChildren, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="False"/>
									<Condition Binding="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}" Value="Collapsed"/>
								</MultiDataTrigger.Conditions>
								<Setter TargetName="textblock" Property="commonhelper:InputBindingsAttach.InputBindings">
									<Setter.Value>
										<InputBindingCollection>
											<MouseBinding Gesture="LeftDoubleClick" Command="{Binding DoubleClickCommand}"
										  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"/>
										</InputBindingCollection>
									</Setter.Value>
								</Setter>
							</MultiDataTrigger>-->

                        </DockPanel>
                        <ItemsPresenter Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" x:Name="ItemsHost"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                            <Setter Property="FontSize" Value="12"/>
                            <Setter Property="Focusable" Value="True"/>
                        </Trigger>

                        <DataTrigger Binding="{Binding IsVisible}" Value="true">
                            <Setter TargetName="xContentPanel" Property="Height" Value="24"/>
                            <Setter Property="FontSize" Value="14"/>
                            <Setter Property="Focusable" Value="False"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding TreeViewType}" Value="GisElementList">
                            <Setter Property="IsSelected" Value="{Binding IsOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding TreeViewType}" Value="GisFilter"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=DataContext, Converter={StaticResource TypeToBooleanConverter}, ConverterParameter={x:Type local:ImageDataInfo}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="IsSelectionFocus" Value="{Binding IsSelectionFocus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="HasItems" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource GrayBackGround}"/>
                        </MultiTrigger>
                        <!--<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="HasItems" Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource SelectedBackgroundColor}"/>
						</MultiTrigger>-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding TreeViewType}" Value="GisElementList"/>
                                <Condition Binding="{Binding IsOpen}" Value="true"/>
                                <Condition Binding="{Binding HasChildren}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource SelectedBackgroundColor}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type local:FocusTreeView}" x:Key="sGisSideTreeView">
        <Setter Property="Background" Value="{DynamicResource GrayBackGround}"/>
        <Setter Property="BorderBrush" Value="#FF444444"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Standard"/>
        <Setter Property="ItemTemplate" Value="{DynamicResource MapResourceHierarchicalDataTemplate}"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource sGisSideTreeViewItemStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FocusTreeView}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="True" ScrollViewer.VerticalScrollBarVisibility="Visible">
                        <ScrollViewer x:Name="scroll_viewer" Focusable="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Padding="{TemplateBinding Padding}" 
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" Background="{x:Null}" 
                                      Foreground="{x:Null}" Template="{DynamicResource sScrollViewer_Common}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Thumb}" x:Key="sThumb_Common">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Height="Auto" Background="#00000000">
                        <Rectangle Fill="#FF656565" Stroke="{x:Null}" Width="Auto" Height="7" RadiusX="3" RadiusY="3"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Thumb}" x:Key="sScrollBarThumb_Common">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle Fill="#FF656565" Stroke="{x:Null}" Width="7" Height="Auto" RadiusX="3" RadiusY="3"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Thumb}" x:Key="sScrollThumbHorizontal">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Height="Auto" Background="#00000000">
                        <Rectangle x:Name="rectangle" Fill="#FFA7A7A7" Stroke="{x:Null}" Width="Auto" Height="6" RadiusX="3" RadiusY="3"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseCaptured" Value="True"/>
                                <Condition Property="IsDragging" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF575757"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF898989"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>
    <Style TargetType="{x:Type Thumb}" x:Key="sScrollThumbVertical">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Height="Auto" Background="#00000000">
                        <Rectangle x:Name="rectangle" Fill="#FFA7A7A7" Stroke="{x:Null}" Width="6" Height="Auto" RadiusX="3" RadiusY="3"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseCaptured" Value="True"/>
                                <Condition Property="IsDragging" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF575757"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF898989"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type RepeatButton}" x:Key="sScrollArrowUp_Basic">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid Width="Auto" Height="Auto" Background="#02000000">
                        <Path x:Name="path" Fill="#FFA7A7A7" Stretch="Fill" Stroke="{x:Null}" Margin="0" Width="7" Height="7" RenderTransformOrigin="0.5,0.5" Data="M0.5,0.5 L5.5263113,-0.52631126 4.5,4.5 z" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="-1"/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="45.000000000000007"/>
                                    <TranslateTransform X="0.21249155749739757" Y="-0.5129999999999999"/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="path" Value="#FF898989"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="path" Value="#FF575757"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>
    <Style TargetType="{x:Type RepeatButton}" x:Key="sScrollArrowDown_Basic">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid Background="#02000000">
                        <Path x:Name="path" Fill="#FFA7A7A7" Stretch="Fill" Stroke="{x:Null}" Margin="0" Width="7" Height="7" RenderTransformOrigin="0.5,0.5" Data="M0.5,0.5 L5.5263113,-0.52631126 4.5,4.5 z" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                    <SkewTransform AngleX="0" AngleY="0"/>
                                    <RotateTransform Angle="135"/>
                                    <TranslateTransform X="0.21249155749739757" Y="-0.5129999999999999"/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="path" Value="#FF898989"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="path" Value="#FF575757"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>
    <Style TargetType="{x:Type RepeatButton}" x:Key="sScrollBarButton_Commom">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Path Fill="#FF656565" Stretch="Fill" Stroke="{x:Null}" Width="6.026" Height="6.026" RenderTransformOrigin="0.5,0.5" Data="M0.5,0.5 L5.5263113,-0.52631126 4.5,4.5 z" Margin="0,4,0.5,0">
                        <Path.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                <SkewTransform AngleX="0" AngleY="0"/>
                                <RotateTransform Angle="-45"/>
                                <TranslateTransform X="0.21249155749739757" Y="-0.5129999999999999"/>
                            </TransformGroup>
                        </Path.RenderTransform>
                    </Path>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type RepeatButton}" x:Key="sVerticalScrollBarPageButton_Common">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type RepeatButton}" x:Key="sHorizontalScrollBarPageButton_Common">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type RepeatButton}" x:Key="sRepeatButton_Left">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Path Fill="#FF656565" Stretch="Fill" Stroke="{x:Null}" Width="6.026" Height="6.026" RenderTransformOrigin="0.5,0.5" Data="M0.5,0.5 L5.5263113,-0.52631126 4.5,4.5 z" Margin="3,1,0,0" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Path.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                <SkewTransform AngleX="0" AngleY="0"/>
                                <RotateTransform Angle="-135"/>
                                <TranslateTransform X="0.21249155749739757" Y="-0.5129999999999999"/>
                            </TransformGroup>
                        </Path.RenderTransform>
                    </Path>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type RepeatButton}" x:Key="sRepeatButton_Right">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Path Fill="#FF656565" Stretch="Fill" Stroke="{x:Null}" Width="6.026" Height="6.026" RenderTransformOrigin="0.5,0.5" Data="M0.5,0.5 L5.5263113,-0.52631126 4.5,4.5 z" Margin="0,1,1,0">
                        <Path.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                <SkewTransform AngleX="0" AngleY="0"/>
                                <RotateTransform Angle="45"/>
                                <TranslateTransform X="0.21249155749739757" Y="-0.5129999999999999"/>
                            </TransformGroup>
                        </Path.RenderTransform>
                    </Path>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type RepeatButton}" x:Key="sScrollArrowLeft_Basic">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid x:Name="grid" Height="Auto">
                        <Path x:Name="path" Fill="#FFA7A7A7" Stretch="Fill" Stroke="{x:Null}" Width="7" Height="7" RenderTransformOrigin="0.5,0.5" Data="M0.5,0.5 L5.5263113,-0.52631126 4.5,4.5 z" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                    <SkewTransform AngleX="0" AngleY="0"/>
                                    <RotateTransform Angle="-135"/>
                                    <TranslateTransform X="0.21249155749739757" Y="-0.5129999999999999"/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="path" Value="#FF898989"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="path" Value="#FF575757"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>
    <Style TargetType="{x:Type RepeatButton}" x:Key="sScrollArrowRight_Basic">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid Width="Auto" Height="Auto">
                        <Path x:Name="path" Fill="#FFA7A7A7" Stretch="Fill" Stroke="{x:Null}" Width="7" Height="7" RenderTransformOrigin="0.5,0.5" Data="M0.5,0.5 L5.5263113,-0.52631126 4.5,4.5 z" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                    <SkewTransform AngleX="0" AngleY="0"/>
                                    <RotateTransform Angle="45"/>
                                    <TranslateTransform X="0.21249155749739757" Y="-0.5129999999999999"/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="path" Value="#FF898989"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="path" Value="#FF575757"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>
    <Style TargetType="{x:Type RepeatButton}" x:Key="VerticalScrollBarPageButton">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>
    <Style TargetType="{x:Type RepeatButton}" x:Key="HorizontalScrollBarPageButton">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>
    <Style TargetType="{x:Type RepeatButton}" x:Key="RepeatButtonStyle1">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Path Fill="#FF656565" Stretch="Fill" Stroke="{x:Null}" Margin="0,-1,0.5,0" Width="6.026" Height="6.026" RenderTransformOrigin="0.5,0.5" Data="M0.5,0.5 L5.5263113,-0.52631126 4.5,4.5 z">
                        <Path.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                <SkewTransform AngleX="0" AngleY="0"/>
                                <RotateTransform Angle="135"/>
                                <TranslateTransform X="0.21249155749739757" Y="-0.5129999999999999"/>
                            </TransformGroup>
                        </Path.RenderTransform>
                    </Path>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type RepeatButton}" x:Key="ScrollBarButton">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" SnapsToDevicePixels="true" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}" x:Key="sScrollBarStyle_Black">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Width" Value="{StaticResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="MinWidth" Value="{StaticResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}" >
                    <Grid x:Name="Bg" SnapsToDevicePixels="true" Width="Auto" Opacity="1" Background="#FF252525" Margin="0,0,0,0" IsEnabled="True" HorizontalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{StaticResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" Height="Auto" MinHeight="11.341"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition MaxHeight="{StaticResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" Height="Auto" MinHeight="11.5"/>
                        </Grid.RowDefinitions>
                        <RepeatButton Style="{StaticResource sScrollBarButton_Commom}" IsEnabled="{TemplateBinding IsMouseOver}" Command="{x:Static ScrollBar.LineUpCommand}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow"/>
                        <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1" IsDirectionReversed="true">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource sVerticalScrollBarPageButton_Common}" Command="{x:Static ScrollBar.PageUpCommand}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource sVerticalScrollBarPageButton_Common}" Command="{x:Static ScrollBar.PageDownCommand}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource sScrollBarThumb_Common}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper"/>
                            </Track.Thumb>
                        </Track>
                        <RepeatButton Style="{StaticResource RepeatButtonStyle1}" IsEnabled="{TemplateBinding IsMouseOver}" Command="{x:Static ScrollBar.LineDownCommand}" Grid.Row="2" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Height" Value="{StaticResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="MinHeight" Value="{StaticResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="{StaticResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    <ColumnDefinition Width="0.00001*"/>
                                    <ColumnDefinition MaxWidth="{StaticResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                </Grid.ColumnDefinitions>
                                <RepeatButton Style="{StaticResource sScrollBarButton_Commom}" IsEnabled="{TemplateBinding IsMouseOver}" Command="{x:Static ScrollBar.LineLeftCommand}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="LeftArrow"/>
                                <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Column="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource sHorizontalScrollBarPageButton_Common}" Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource sHorizontalScrollBarPageButton_Common}" Command="{x:Static ScrollBar.PageRightCommand}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource sScrollBarThumb_Common}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper"/>
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton Style="{StaticResource sScrollBarButton_Commom}" IsEnabled="{TemplateBinding IsMouseOver}" Command="{x:Static ScrollBar.LineRightCommand}" Grid.Column="2" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="RightArrow"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="Bg" Value="#FFF4F4F4"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type ScrollBar}" x:Key="sScrollBarStyle_White">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Width" Value="{StaticResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="MinWidth" Value="{StaticResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{StaticResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            <RowDefinition Height="0.00001*"/>
                            <RowDefinition MaxHeight="{StaticResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                        </Grid.RowDefinitions>
                        <RepeatButton Style="{StaticResource sScrollBarButton_Commom}" IsEnabled="{TemplateBinding IsMouseOver}" Command="{x:Static ScrollBar.LineUpCommand}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow"/>
                        <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1" IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb Style="{StaticResource sScrollBarThumb_Common}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource sVerticalScrollBarPageButton_Common}" Command="{x:Static ScrollBar.PageDownCommand}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource sVerticalScrollBarPageButton_Common}" Command="{x:Static ScrollBar.PageUpCommand}"/>
                            </Track.DecreaseRepeatButton>
                        </Track>
                        <RepeatButton Style="{StaticResource sScrollBarButton_Commom}" IsEnabled="{TemplateBinding IsMouseOver}" Command="{x:Static ScrollBar.LineDownCommand}" Grid.Row="2" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow" RenderTransformOrigin="0.5,0.5">
                            <RepeatButton.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="180"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </RepeatButton.RenderTransform>
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bg" Value="#FFF4F4F4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Height" Value="{StaticResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="MinHeight" Value="{StaticResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" Height="Auto" SnapsToDevicePixels="true" Background="#FF252525" Margin="0,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="{StaticResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" Width="Auto" MinWidth="12.694"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition MaxWidth="{StaticResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" Width="Auto" MinWidth="13.433"/>
                                </Grid.ColumnDefinitions>
                                <RepeatButton Style="{StaticResource sRepeatButton_Left}" IsEnabled="{TemplateBinding IsMouseOver}" Command="{x:Static ScrollBar.LineLeftCommand}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="LeftArrow"/>
                                <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Column="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource sHorizontalScrollBarPageButton_Common}" Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource sHorizontalScrollBarPageButton_Common}" Command="{x:Static ScrollBar.PageRightCommand}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource sThumb_Common}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper"/>
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton Style="{StaticResource sRepeatButton_Right}" IsEnabled="{TemplateBinding IsMouseOver}" Command="{x:Static ScrollBar.LineRightCommand}" Grid.Column="2" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="RightArrow"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type ScrollBar}" x:Key="sHorizontalScrollBar">
        <Setter Property="Background" Value="{DynamicResource VerticalScrollBarBackground}"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Width" Value="{StaticResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="MinWidth" Value="{StaticResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{StaticResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            <RowDefinition Height="0.00001*"/>
                            <RowDefinition MaxHeight="{StaticResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                        </Grid.RowDefinitions>
                        <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource sScrollArrowUp_Basic}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow" TabIndex="10"/>
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1" Orientation="Vertical">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource sScrollThumbHorizontal}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper" TabIndex="20"/>
                            </Track.Thumb>
                        </Track>
                        <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource sScrollArrowDown_Basic}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow" TabIndex="30"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Orientation" Value="Vertical"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Height" Value="{StaticResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="MinHeight" Value="{StaticResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="Background" Value="{DynamicResource HorizontalScrollBarBackground}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="{StaticResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    <ColumnDefinition Width="0.00001*"/>
                                    <ColumnDefinition MaxWidth="{StaticResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                </Grid.ColumnDefinitions>
                                <Border BorderBrush="White" BorderThickness="1" Height="8" Margin="0" Grid.Row="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CornerRadius="4" Grid.Column="1">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <LinearGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                                    <RotateTransform Angle="0" CenterY="0.5" CenterX="0.5"/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </LinearGradientBrush.RelativeTransform>
                                            <GradientStop Color="#FFF0F0F0" Offset="0.2"/>
                                            <GradientStop Color="#FFF0F0F0" Offset="1"/>
                                            <GradientStop Color="#FFA0A0A0"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource sScrollArrowLeft_Basic}" />
                                <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}" Orientation="Horizontal">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource sScrollThumbHorizontal}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper"/>
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource sScrollArrowRight_Basic}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="RightArrow"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="Bg" Value="{DynamicResource ScrollBarDisabledBackground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type ScrollBar}" x:Key="sVerticalScrollBar">
        <Setter Property="Background" Value="{DynamicResource VerticalScrollBarBackground}"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Width" Value="{StaticResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="MinWidth" Value="{StaticResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{StaticResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            <RowDefinition Height="0.00001*"/>
                            <RowDefinition MaxHeight="{StaticResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                        </Grid.RowDefinitions>
                        <Border BorderBrush="White" BorderThickness="1" Height="Auto" Margin="0" Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Center" Width="8" CornerRadius="4">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <LinearGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                            <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                            <RotateTransform Angle="-90" CenterY="0.5" CenterX="0.5"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </LinearGradientBrush.RelativeTransform>
                                    <GradientStop Color="#FFF0F0F0" Offset="0.2"/>
                                    <GradientStop Color="#FFF0F0F0" Offset="1"/>
                                    <GradientStop Color="#FFA0A0A0"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource sScrollArrowUp_Basic}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow" TabIndex="10"/>
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource sScrollThumbVertical}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper" TabIndex="20"/>
                            </Track.Thumb>
                        </Track>
                        <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource sScrollArrowDown_Basic}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow" TabIndex="30"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Height" Value="{StaticResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="MinHeight" Value="{StaticResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="Background" Value="{StaticResource HorizontalScrollBarBackground}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="{StaticResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    <ColumnDefinition Width="0.00001*"/>
                                    <ColumnDefinition MaxWidth="{StaticResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                </Grid.ColumnDefinitions>
                                <RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="LeftArrow"/>
                                <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource sScrollThumbVertical}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper"/>
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="RightArrow"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="Bg" Value="{DynamicResource ScrollBarDisabledBackground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <ControlTemplate TargetType="{x:Type ScrollViewer}" x:Key="sScrollViewer_Common">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1" Opacity="0.01"/>
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" 
            			CanHorizontallyScroll="True" CanVerticallyScroll="True" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" 
            			Margin="{TemplateBinding Padding}" Grid.Row="0"/>
            <ScrollBar x:Name="PART_VerticalScrollBar" ContextMenu="{x:Null}" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" 
            			Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
            			ViewportSize="{TemplateBinding ViewportHeight}" Style="{StaticResource sScrollBarStyle_Black}"/>
            <ScrollBar x:Name="PART_HorizontalScrollBar" ContextMenu="{x:Null}" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" 
            			Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
            			ViewportSize="{TemplateBinding ViewportWidth}" Style="{StaticResource sScrollBarStyle_White}"/>
        </Grid>
    </ControlTemplate>

</ResourceDictionary>
